(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{213:function(s,a,n){s.exports=n.p+"assets/img/jenkins1.d2f8a97c.png"},214:function(s,a,n){s.exports=n.p+"assets/img/jenkins2.cd46e3a6.png"},215:function(s,a,n){s.exports=n.p+"assets/img/jenkins3.a9508a91.png"},216:function(s,a,n){s.exports=n.p+"assets/img/jenkins4.ca94d2b0.png"},217:function(s,a,n){s.exports=n.p+"assets/img/jenkins5.8d5af049.png"},218:function(s,a,n){s.exports=n.p+"assets/img/jenkins6.d2323fee.png"},219:function(s,a,n){s.exports=n.p+"assets/img/jenkins7.acad5969.png"},220:function(s,a,n){s.exports=n.p+"assets/img/jenkins8.7793d580.png"},221:function(s,a,n){s.exports=n.p+"assets/img/jenkins9.fc83b1db.png"},222:function(s,a,n){s.exports=n.p+"assets/img/jenkins10.dc16b891.png"},223:function(s,a,n){s.exports=n.p+"assets/img/jenkins11.fd4bfbb9.png"},224:function(s,a,n){s.exports=n.p+"assets/img/jenkins12.8c7fd6cc.png"},225:function(s,a,n){s.exports=n.p+"assets/img/jenkins13.24ee797e.png"},226:function(s,a,n){s.exports=n.p+"assets/img/jenkins14.108f44d2.png"},227:function(s,a,n){s.exports=n.p+"assets/img/jenkins15.6279200e.png"},304:function(s,a,n){"use strict";n.r(a);var t=n(0),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jenkins-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-gitlab","aria-hidden":"true"}},[s._v("#")]),s._v(" Jenkins + Gitlab")]),s._v(" "),t("p",[t("br"),s._v("到这里，我们的Jenkins 和Gitlab就已经安装完成。"),t("br"),s._v("接下来我们将这两个平台串联起来，"),t("strong",[s._v("实现第一阶段的持续构建和部署")])]),s._v(" "),t("p",[t("a",{attrs:{name:"PL5tW"}})]),s._v(" "),t("h2",{attrs:{id:"jenkins-安装-nodejs-环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-安装-nodejs-环境","aria-hidden":"true"}},[s._v("#")]),s._v(" Jenkins 安装 Nodejs 环境")]),s._v(" "),t("p",[t("a",{attrs:{name:"56rzz"}})]),s._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("p",[t("br"),s._v("《安装 Jenkins》那一章我们讲到，Jenkins容器环境是一个全新的环境，与外界隔离。那我们怎么在容器内部使用Node环境呢？有以下三种方式："),t("br")]),s._v(" "),t("ol",[t("li",[s._v("进入Jenkins容器，手动安装Node：这种方式靠谱，但是比较费时间，且需要找寻缺失的依赖（Jenkins容器底层是Ubuntu）")]),s._v(" "),t("li",[s._v("像Docker in Docker一样，把宿主机的Node环境挂载到容器内：这种也可以，但是可能环境会有问题。如依赖缺失等")]),s._v(" "),t("li",[t("strong",[s._v("使用Jenkins平台自带的工具安装Node")])])]),s._v(" "),t("p",[t("br"),s._v("在这里，我们"),t("strong",[s._v("选择第三种方式")]),s._v("安装Nodejs，既方便又省力。"),t("br"),s._v(" "),t("br"),s._v("我们打开 Jenkins 首页，找到左侧的“系统配置”，选择“插件管理”，点击“可选插件”，搜索 “Node”。点击左下角的 “直接安装”"),t("br"),t("img",{attrs:{src:n(213),alt:"image"}}),t("br"),s._v(" "),t("br"),s._v("安装完毕后，重启 "),t("code",[s._v("Jenkins")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker restart jenkins\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("br"),s._v("重启完毕后，回到 Jenkins 首页，找到左侧的“系统配置”，选择“全局工具配置”"),t("br"),s._v(" "),t("br"),t("img",{attrs:{src:n(214),alt:"image"}}),t("br"),s._v(" "),t("br"),s._v("找到下面的“Node JS”，点击NodeJS安装，选择相应的版本填写信息保存即可。"),t("br"),t("img",{attrs:{src:n(215),alt:"image"}}),t("br")]),s._v(" "),t("p",[t("a",{attrs:{name:"hTd85"}})]),s._v(" "),t("h3",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("p",[t("br"),s._v("那我们在任务中如何使用呢？我们只需要在任务的“配置”中，找到“构建环境”，选中 “Provide Node & npm bin/ folder to PATH” ，选择刚才配置好的NodeJS即可。"),t("br"),s._v(" "),t("br"),s._v("第一次执行会下载对应的Node版本，后续不会下载。"),t("br"),s._v(" "),t("br"),t("img",{attrs:{src:n(216),alt:"image"}}),t("br")]),s._v(" "),t("p",[t("a",{attrs:{name:"Fi3uS"}})]),s._v(" "),t("h2",{attrs:{id:"开始集成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始集成","aria-hidden":"true"}},[s._v("#")]),s._v(" 开始集成")]),s._v(" "),t("p",[t("a",{attrs:{name:"EmgFy"}})]),s._v(" "),t("h3",{attrs:{id:"jenkins-容器端生成私钥公钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-容器端生成私钥公钥","aria-hidden":"true"}},[s._v("#")]),s._v(" Jenkins 容器端生成私钥公钥")]),s._v(" "),t("p",[t("br"),s._v("先进入Jenkins容器内，使用 "),t("code",[s._v("ssh-keygen -t rsa")]),s._v(" 生成私钥公钥。如下图所示，代表生成成功。"),t("br")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it jenkins /bin/bash\nssh-keygen -t rsa\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("br"),t("img",{attrs:{src:n(217),alt:"image"}}),t("br"),s._v("执行后，我们生成的私钥公钥文件存放在了 "),t("code",[s._v("~/.ssh")]),s._v(" 目录下。其中， "),t("code",[s._v("id_rsa")]),s._v(" 为私钥， "),t("code",[s._v("id_rsa.pub")]),s._v(" 为公钥。"),t("br")]),s._v(" "),t("p",[t("a",{attrs:{name:"6i7Ca"}})]),s._v(" "),t("h3",{attrs:{id:"jenkins-端配置私钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-端配置私钥","aria-hidden":"true"}},[s._v("#")]),s._v(" Jenkins 端配置私钥")]),s._v(" "),t("p",[t("br"),s._v("我们在Jenkins端先配置刚才创建的私钥，然后在Gitlab端配置公钥，用于代码拉取身份验证。"),t("br"),s._v("找到Jenkins首页的 “系统设置”，选择 “Manage Credentials”"),t("br"),t("img",{attrs:{src:n(218),alt:"image"}}),t("br"),s._v("点击下方 “全局”，点击左边的 “添加凭据”"),t("br"),s._v(" "),t("br"),t("img",{attrs:{src:n(219),alt:"image"}}),t("br"),s._v("接着选择类型为 “SSH Username with private key.”"),t("br"),t("img",{attrs:{src:n(220),alt:"image"}}),t("br"),s._v("在这里，ID为此凭据在Jenkins的标示，UserName 为你的Gitlab用户名，PrivateKey 为你的服务器私钥。"),t("br"),s._v(" "),t("br"),s._v("选择PrivateKey，点击下方的“add”，将服务器的私钥内容复制进去（记得上下方的提示英文也复制）。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/id_rsa\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("然后点击确定，保存退出。"),t("br")]),s._v(" "),t("p",[t("a",{attrs:{name:"3Wrk8"}})]),s._v(" "),t("h3",{attrs:{id:"gitlab-端配置公钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-端配置公钥","aria-hidden":"true"}},[s._v("#")]),s._v(" Gitlab 端配置公钥")]),s._v(" "),t("p",[t("br"),s._v("打开Gitlab页面，点击右上角头像 => 设置，找到左边的 “SSH密钥”。将 "),t("code",[s._v("~/.ssh/id_rsa.pub")]),s._v(" 文件内容复制进去。点击添加密钥，保存成功")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/id_rsa.pub\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("br"),t("img",{attrs:{src:n(221),alt:"image"}}),t("br")]),s._v(" "),t("p",[t("a",{attrs:{name:"OCyDk"}})]),s._v(" "),t("h3",{attrs:{id:"配置任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置任务","aria-hidden":"true"}},[s._v("#")]),s._v(" 配置任务")]),s._v(" "),t("p",[t("br"),s._v("在上面，我们在分别配置了公钥和私钥用来做SSH免密登录。接下来我们的代码拉取，也用SSH的方式拉取。"),t("br"),s._v(" "),t("br"),s._v("我们新建一个任务，选择 “自由风格的软件项目”。创建完成后，找到“源码管理“，点击”Git“。"),t("br"),s._v(" "),t("br"),t("img",{attrs:{src:n(222),alt:"image"}}),t("br"),s._v(" "),t("br"),s._v("前往Gitlab仓库地址，找到 “克隆”，复制SSH克隆地址。"),t("br"),t("img",{attrs:{src:n(223),alt:"image"}}),t("br"),s._v(" "),t("br"),s._v("将地址复制进刚才Jenkins任务 “Repository URL” 内，“Credentials” 选择刚才添加的凭证。"),t("br"),t("img",{attrs:{src:n(224),alt:"image"}}),t("br"),s._v("在下方找到 “构建”，选择 “执行Shell”。输入一段构建脚本来测试是否成功运行。"),t("br")]),s._v(" "),t("blockquote",[t("p",[s._v("不要忘记勾选：Provide Node & npm bin/ folder to PATH，否则没有Node环境")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("node -v\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" -v\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g cnpm --registry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https://registry.npm.taobao.org\ncnpm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("img",{attrs:{src:n(225),alt:"image"}}),t("br"),s._v(" "),t("br"),s._v("最后我们查看Jenkins构建日志，构建成功。"),t("br"),s._v(" "),t("br"),t("img",{attrs:{src:n(226),alt:"image"}}),t("br")]),s._v(" "),t("p",[t("a",{attrs:{name:"KCdIc"}})]),s._v(" "),t("h2",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署","aria-hidden":"true"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("p",[t("a",{attrs:{name:"J2Gub"}})]),s._v(" "),t("h3",{attrs:{id:"配置nginx端公钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置nginx端公钥","aria-hidden":"true"}},[s._v("#")]),s._v(" 配置Nginx端公钥")]),s._v(" "),t("p",[t("br"),s._v("上面我们讲到，使用Jenkins做自动化构建，但缺少部署一环。"),t("br"),s._v("我们新创建一个服务器，只存放一个 Nginx 服务。在这里，nginx的安装方式不限，可以用docker也可以直接安装。"),t("br"),s._v(" "),t("br"),s._v("我们在Nginx服务器内，使用 "),t("code",[s._v("ssh-keygen -t rsa")]),s._v(" 生成公钥和私钥。接着 在 "),t("code",[s._v(".ssh/")]),s._v(" 文件夹下，创建一个 "),t("code",[s._v("authorized_keys")]),s._v(" 文件。将我们Jenkins容器端的公钥拷贝进 "),t("code",[s._v("authorized_keys")]),s._v(" 文件内。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("ssh-keygen -t rsa\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" .ssh/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" authorized_keys\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" authorized_keys\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("img",{attrs:{src:n(227),alt:"image"}}),t("br"),s._v(" "),t("br")]),s._v(" "),t("h3",{attrs:{id:"初始化scp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化scp","aria-hidden":"true"}},[s._v("#")]),s._v(" 初始化"),t("code",[s._v("scp")])]),s._v(" "),t("p",[s._v("进入到 "),t("code",[s._v("Jenkins")]),s._v(" 服务器"),t("br")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it jenkins /bin/bash\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" test.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" test.txt root@10.211.55.4:~\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("首次scp需要手动操作")])]),s._v(" "),t("p",[t("strong",[s._v("如果不想首次手动操作，需要降低安全级别跳过"),t("code",[s._v("ssh公钥")]),s._v("检查，需要为"),t("code",[s._v("ssh")]),s._v("或"),t("code",[s._v("scp")]),s._v("添加参数"),t("code",[s._v("-o StrictHostKeyChecking=no")])])]),s._v(" "),t("p",[t("a",{attrs:{name:"3W1m3"}})]),s._v(" "),t("h3",{attrs:{id:"修改-jenkins-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改-jenkins-配置","aria-hidden":"true"}},[s._v("#")]),s._v(" 修改 Jenkins 配置")]),s._v(" "),t("p",[t("br"),s._v("编辑我们的 "),t("code",[s._v("Jenkins")]),s._v(" 任务，新增加几条 "),t("code",[s._v("shell")]),s._v(" 命令。"),t("br"),s._v(" "),t("br"),s._v("在我们 "),t("code",[s._v("build")]),s._v(" 结束后，先将dist文件打包为压缩包，然后通过 "),t("code",[s._v("linux scp")]),s._v(" 命令上传至Nginx服务器。接着用 "),t("code",[s._v("ssh")]),s._v(" 命令远程操控解压到 "),t("code",[s._v("Nginx")]),s._v(" 目录即可。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# node -v")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm -v")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm install -g cnpm --registry=https://registry.npm.taobao.org")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cnpm install")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm run build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# # 压缩")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tar -czvf vue-cli-demo.tar ./dist")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# scp ./vue-cli-demo.tar root@172.16.81.151:~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ssh root@172.16.81.151 "tar zxvf ~/vue-cli-demo.tar && mv dist/* /home/nginx/html"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("blockquote",[t("p",[s._v("scp: 将本地文件/远程服务器内文件通过ssh上传/下载到指定地址")])]),s._v(" "),t("p",[s._v("最终优化后的版本:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("node -v\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" -v\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g cnpm --registry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https://registry.npm.taobao.org\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf node_modules/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf dist/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf vue-cli-demo.tar\ncnpm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -czvf vue-cli-demo.tar ./dist\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" root@10.211.55.4 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf ~/vue-cli-demo.tar && rm -rf /home/nginx/html/jenkins-test-vue"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" ./vue-cli-demo.tar root@10.211.55.4:~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" root@10.211.55.4 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tar zxvf ~/vue-cli-demo.tar && mv ~/dist/ /home/nginx/html/jenkins-test-vue"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("blockquote",[t("p",[s._v("前提是修改了 vue 项目的 publicPath: '/jenkins-test-vue'\n访问浏览器 10.211.55.4/jenkins-test-vue")])]),s._v(" "),t("p",[t("br"),s._v("打开新机器的页面，如果访问成功代表部署成功。"),t("br"),s._v(" "),t("br")])])}),[],!1,null,null,null);a.default=e.exports}}]);